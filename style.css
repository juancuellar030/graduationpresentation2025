/* Add this at the very top of style.css */
@import url('https://fonts.googleapis.com/css2?family=Montserrat:wght@400;700&family=Playfair+Display:wght@700&display=swap');

body {
    margin: 0;
    overflow: hidden;
}

#curtain {
    position: relative;
    width: 100vw;
    height: 100vh;
    overflow: hidden;
}

.curtain__panel {
    position: absolute;
    top: 0;
    width: 50%;
    height: 100%;
    background-color: #8B0000; /* Theater red */
    transition: transform 1s ease-in-out;
}

.curtain__panel--left {
    left: 0;
    transform-origin: left;
}

.curtain__panel--right {
    right: 0;
    transform-origin: right;
}

/* 1. Apply Playfair Display to the main curtain title */
#school-name {
    font-family: 'Playfair Display', serif;
    font-weight: 700; /* Use the bold version we imported */
    font-size: 3.5em; /* A little larger for more impact */
}

/* 2. Apply Playfair Display to the student names inside the card */
.student-card h2 {
    font-family: 'Playfair Display', serif;
    font-weight: 700;
    font-size: 2.2em;
    margin-bottom: 20px; /* Add some space below the name */
}

/* 3. Apply Montserrat to all the paragraph text inside the student card */
.student-card p {
    font-family: 'Montserrat', sans-serif;
    font-weight: 400; /* Use the regular version */
    font-size: 1.1em;
    line-height: 1.6; /* Improve readability with more line spacing */
}

#school-info {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    text-align: center;
    color: white;
}

#school-logo {
    max-width: 200px;
}

#school-name {
    font-size: 3em;
    margin-top: 20px;
}

.open .curtain__panel--left {
    transform: scaleX(0);
}

.open .curtain__panel--right {
    transform: scaleX(0);
}

.hidden {
    display: none;
}


/* General Presentation Styles */
#presentation-container {
    position: relative;
    width: 100vw;
    height: 100vh;
    background: linear-gradient(to bottom, #001e4d, #004080); /* Dark blue gradient background */
    overflow: hidden;
}

#student-carousel {
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

#student-frame {
    width: 80%;
    height: 80%;
    border: none;
    background-color: transparent;
}

/* Student Slide Styles (for studentX.html files) */
.student-body {
    background-color: transparent;
    color: white;
    font-family: sans-serif;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100%;
    margin: 0;
}

.student-slide {
    display: flex;
    align-items: center;
    gap: 50px;
}

/* --- Photo Frame Styling (REPLACE old rules with this) --- */

/* 1. The main container that holds the photo, frame, and flares */
.photo-container {
    position: relative; /* This is crucial for positioning the children */
    width: 350px;       /* Set the overall width of the frame area */
    height: 450px;      /* Set the overall height of the frame area */
}

/* 2. The student's actual photo */
.student-photo {
    position: absolute; /* Allows us to stack it */
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%); /* Centers the photo perfectly */
    width: 85%;         /* Adjust this percentage to fit INSIDE your frame */
    height: 90%;        /* Adjust this percentage to fit INSIDE your frame */
    object-fit: cover;  /* Ensures the photo fills the space without distortion */
    z-index: 1;         /* Puts the photo behind the frame */
    border-radius: 5px; /* Optional: slightly rounds corners if they poke out */
}

/* 3. Your SVG photo frame */
.frame-svg {
    position: absolute; /* Allows us to stack it */
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 2;         /* Puts the frame ON TOP of the photo */
    pointer-events: none; /* Allows clicks to go "through" the frame if needed */
}

/* --- FINAL FLARE STYLES (REPLACE ALL OLD FLARE CSS) --- */

/* 1. The Main Wrapper: Positioned over the student slide area */
#flare-wrapper-main {
    position: absolute; /* Keep it absolute */
    z-index: 5;
    pointer-events: none;
    /* REMOVED: width, height, top, left are now set by script.js */
    /* This transition adds a smooth slide if the position changes slightly */
    transition: all 0.1s ease-out;
}

/* 2. The Flare Effect itself */
.flare-effect {
    position: absolute;
    background: radial-gradient(
        circle at center,
        #FFFFFF 0%, rgba(255, 255, 255, 0.6) 30%,
        rgba(255, 255, 255, 0.2) 70%, rgba(255, 255, 255, 0) 100%
    );
    width: 55px;
    height: 55px;
    border-radius: 55%;
    display: flex;
    justify-content: center;
    align-items: center;
    animation: flare-glint 10s infinite ease-in-out;
    animation-fill-mode: backwards;
}

/* 3. The Rays (no changes needed here) */
.flare-effect::before,
.flare-effect::after {
    content: '';
    position: absolute;
    background: linear-gradient(
        to right,
        rgba(255, 255, 255, 0), rgba(255, 255, 255, 0.5) 40%,
        rgba(255, 255, 255, 1) 50%, rgba(255, 255, 255, 0.5) 60%,
        rgba(255, 255, 255, 0)
    );
    width: 210px;
    height: 2px;
    border-radius: 2px;
}
.flare-effect::before { transform: rotate(45deg); }
.flare-effect::after { transform: rotate(-45deg); }

/* 4. The Animation (no changes needed here) */
@keyframes flare-glint {
    0% { opacity: 0; transform: scale(0.5) rotate(0deg); }
    20% { opacity: 1; transform: scale(1.1) rotate(90deg); }
    40% { opacity: 0; transform: scale(1.5) rotate(180deg); }
    100% { opacity: 0; transform: scale(1.5) rotate(180deg); }
}

.flare-effect:nth-child(2) {
    animation-delay: 5s;
}

.student-card {
    background-color: rgba(255, 255, 255, 0.1);
    padding: 30px;
    border-radius: 15px;
    width: 400px;
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.2);
    box-shadow: 0 8px 32px 0 rgba(0, 0, 0, 0.37);
}

/* style.css */

/* --- Updated and Simplified Balloon Animation --- */
.balloons {
    position: absolute;
    bottom: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: 10;
}

.balloon {
    position: absolute;
    /* FIX 1: Increased negative value to guarantee balloons start off-screen */
    bottom: -450px;
    width: 180px;
    height: auto;
    animation-name: float-up;
    animation-timing-function: linear;
    animation-iteration-count: infinite;
    opacity: 0.9;
}

@keyframes float-up {
    0% {
        transform: translateY(0) rotate(0deg);
    }
    100% {
        /*
          FIX: Increased the travel distance from -150vh to -180vh.
          This ensures the entire balloon, including its string, goes
          completely past the top edge of the screen before the loop restarts.
        */
        transform: translateY(-180vh) translateX(var(--horizontal-drift, 50px)) rotate(15deg);
    }
}

/* --- Updated Confetti Animation (REPLACE the old section) --- */
.confetti {
    position: absolute;
    width: 10px; /* Make it slightly thinner */
    height: 20px;
    top: -30px;
    opacity: 1;
    /* THIS IS THE FIX: A large border-radius creates the rounded rectangle shape. */
    border-radius: 25px;
    background-image: linear-gradient(125deg, #F0D886, #D4AF37, #FFF8C7, #A8882F);

    /* The animation properties are now set by JavaScript, so we only need the name here */
    animation-name: fall;
    animation-timing-function: linear;
    animation-iteration-count: infinite;
}

/* REMOVED: All the .confetti:nth-child(...) rules are no longer needed. */

/* The keyframe now uses our random CSS variables from the script */
@keyframes fall {
    to {
        transform:
            translateY(110vh)
            translateX(var(--confetti-drift, 0px))
            /* THIS IS THE FIX: We add the rotateX() for the 3D vertical tumble */
            rotateX(var(--confetti-spin-x, 720deg))
            rotate(var(--confetti-rotation, 720deg));
        opacity: 0;
    }
}
