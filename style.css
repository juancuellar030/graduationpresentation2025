body {
    margin: 0;
    overflow: hidden;
}

#curtain {
    position: relative;
    width: 100vw;
    height: 100vh;
    overflow: hidden;
}

.curtain__panel {
    position: absolute;
    top: 0;
    width: 50%;
    height: 100%;
    background-color: #8B0000; /* Theater red */
    transition: transform 1s ease-in-out;
}

.curtain__panel--left {
    left: 0;
    transform-origin: left;
}

.curtain__panel--right {
    right: 0;
    transform-origin: right;
}

#school-info {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    text-align: center;
    color: white;
}

#school-logo {
    max-width: 200px;
}

#school-name {
    font-size: 3em;
    margin-top: 20px;
}

.open .curtain__panel--left {
    transform: scaleX(0);
}

.open .curtain__panel--right {
    transform: scaleX(0);
}

.hidden {
    display: none;
}


/* General Presentation Styles */
#presentation-container {
    position: relative;
    width: 100vw;
    height: 100vh;
    background: linear-gradient(to bottom, #001e4d, #004080); /* Dark blue gradient background */
    overflow: hidden;
}

#student-carousel {
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

#student-frame {
    width: 80%;
    height: 80%;
    border: none;
    background-color: transparent;
}

/* Student Slide Styles (for studentX.html files) */
.student-body {
    background-color: transparent;
    color: white;
    font-family: sans-serif;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100%;
    margin: 0;
}

.student-slide {
    display: flex;
    align-items: center;
    gap: 50px;
}

/* --- Photo Frame Styling (REPLACE old rules with this) --- */

/* 1. The main container that holds the photo, frame, and flares */
.photo-container {
    position: relative; /* This is crucial for positioning the children */
    width: 350px;       /* Set the overall width of the frame area */
    height: 450px;      /* Set the overall height of the frame area */
}

/* 2. The student's actual photo */
.student-photo {
    position: absolute; /* Allows us to stack it */
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%); /* Centers the photo perfectly */
    width: 85%;         /* Adjust this percentage to fit INSIDE your frame */
    height: 90%;        /* Adjust this percentage to fit INSIDE your frame */
    object-fit: cover;  /* Ensures the photo fills the space without distortion */
    z-index: 1;         /* Puts the photo behind the frame */
    border-radius: 5px; /* Optional: slightly rounds corners if they poke out */
}

/* 3. Your SVG photo frame */
.frame-svg {
    position: absolute; /* Allows us to stack it */
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 2;         /* Puts the frame ON TOP of the photo */
    pointer-events: none; /* Allows clicks to go "through" the frame if needed */
}

/* --- Advanced Flare Effect (REPLACE all old flare styles) --- */

/* 1. The Wrapper: This div holds and positions our flares. */
.flare-wrapper {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 3; /* On top of the frame */
    pointer-events: none;
}

/* 2. The Flare Element: This is the bright core of the flare. */
.flare-effect {
    position: absolute;
    /* This creates the soft, glowing center */
    background: radial-gradient(
        circle at center,
        #FFFFFF 0%, /* Bright yellow-white center */
        rgba(255, 255, 255, 0.6) 30%,
        rgba(255, 255, 255, 0.2) 70%,
        rgba(255, 255, 255, 0) 100%
    );
    width: 60px; /* Size of the central glow */
    height: 60px;
    border-radius: 50%;
    display: flex; /* Helps center the rays */
    justify-content: center;
    align-items: center;

    /* Apply the new animation */
    animation: flare-glint 8s infinite ease-in-out;
}

/* 3. The Rays: We use pseudo-elements to create the cross shape. */
.flare-effect::before,
.flare-effect::after {
    content: '';
    position: absolute;
    /* This creates the sharp, orange ray of light */
    background: linear-gradient(
        to right,
        rgba(255, 255, 255, 0),
        rgba(255, 255, 255, 0.5) 40%,
        rgba(255, 255, 255, 1) 50%,
        rgba(255, 255, 255, 0.5) 60%,
        rgba(255, 255, 255, 0)
    );
    width: 220px; /* Length of the ray */
    height: 2px;  /* Thickness of the ray */
    border-radius: 2px;
}

/* 4. Rotate the rays to form the cross */
.flare-effect::before {
    transform: rotate(45deg);
}
.flare-effect::after {
    transform: rotate(-45deg);
}


/* 5. The Animation: Fades in, scales up slightly for a "glint," then fades out. */
@keyframes flare-glint {
    0% {
        opacity: 0;
        /* Start with no rotation and small scale */
        transform: scale(0.5) rotate(0deg);
    }
    20% {
        opacity: 1;
        /* At its brightest, it has scaled up and rotated halfway */
        transform: scale(1.1) rotate(90deg);
    }
    40% {
        opacity: 0;
        /* As it fades out, it completes its spin and gets bigger */
        transform: scale(1.5) rotate(180deg);
    }
    100% {
        opacity: 0;
        /* Stay invisible for the rest of the animation cycle */
        transform: scale(1.5) rotate(180deg);
    }
}

/* 6. Position and time the individual flares */
.flare-effect:nth-child(1) {
    top: -30px;
    left: -30px;
}

.flare-effect:nth-child(2) {
    top: -30px;
    left: -30px;
    animation-delay: 4s; /* Make them appear at different times */
}

.student-card {
    background-color: rgba(255, 255, 255, 0.1);
    padding: 30px;
    border-radius: 15px;
    width: 400px;
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.2);
    box-shadow: 0 8px 32px 0 rgba(0, 0, 0, 0.37);
}

/* style.css */

/* --- Updated and Simplified Balloon Animation --- */
.balloons {
    position: absolute;
    bottom: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: 10;
}

.balloon {
    position: absolute;
    /* FIX 1: Increased negative value to guarantee balloons start off-screen */
    bottom: -450px;
    width: 180px;
    height: auto;
    animation-name: float-up;
    animation-timing-function: linear;
    animation-iteration-count: infinite;
    opacity: 0.9;
}

@keyframes float-up {
    0% {
        transform: translateY(0) rotate(0deg);
    }
    100% {
        /*
          FIX: Increased the travel distance from -150vh to -180vh.
          This ensures the entire balloon, including its string, goes
          completely past the top edge of the screen before the loop restarts.
        */
        transform: translateY(-180vh) translateX(var(--horizontal-drift, 50px)) rotate(15deg);
    }
}

/* --- Updated Confetti Animation --- */
.confetti {
    position: absolute;
    width: 12px;  /* Slightly bigger for better visual effect */
    height: 20px; /* Rectangular shape looks more like falling confetti */
    top: -30px;   /* Start further off-screen */
    opacity: 0.9;
    animation: fall linear infinite;

    /*
      THE GOLD EFFECT:
      We use a linear-gradient as the background. This gradient is designed
      to simulate light reflecting off a metallic surface.
      - #FFDF00 (Golden Yellow): Main color
      - #D4AF37 (Gold): A slightly darker shade for depth
      - #FFF8C7 (Light Yellow/White): A bright highlight
      - #B8860B (Dark Goldenrod): A shadow color
      The angle (125deg) makes the light appear to come from the top-left.
    */
    background-image: linear-gradient(125deg, #FFDF00, #D4AF37, #FFF8C7, #B8860B);
}

/*
  We no longer need different background-colors for each child,
  but we still want them to fall at different speeds and times.
*/
.confetti:nth-child(1) { left: 10%; animation: fall 10s linear infinite; }
.confetti:nth-child(2) { left: 20%; animation: fall 8s linear 2s infinite; }
.confetti:nth-child(3) { left: 40%; animation: fall 12s linear 5s infinite; }
.confetti:nth-child(4) { left: 70%; animation: fall 9s linear 1s infinite; }
.confetti:nth-child(5) { left: 85%; animation: fall 7s linear 3s infinite; }
/* Add more if you have more confetti divs */
.confetti:nth-child(6) { left: 50%; animation: fall 11s linear 4s infinite; }
.confetti:nth-child(7) { left: 80%; animation: fall 9s linear 6s infinite; }


/* The falling animation with rotation remains the same */
@keyframes fall {
    to {
        transform: translateY(100vh) rotate(720deg); /* Increased rotation for more flutter */
        opacity: 0;
    }
}
